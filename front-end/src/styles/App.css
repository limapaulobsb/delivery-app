@import 'https://fonts.googleapis.com/css2?family=Poppins&display=swap';

:root {
  --yellow: rgb(165 165 0);
  --gray: rgb(180 180 180);
  --dark-red: rgb(90 45 45);
  --dark-blue: rgb(45 45 90);
  --dark-purple: rgb(15 30 45);
  --lighter-red: rgb(255 210 210);
  --lightest-red: rgb(255 240 240);
  --light-yellow: rgb(255 255 80);
  --color-gradient: linear-gradient(
    to top right,
    rgb(210 120 0),
    rgb(210 0 0),
    rgb(210 0 120)
  );
  --white-gradient: linear-gradient(
    135deg,
    rgba(255 255 255 / 40%),
    rgba(255 255 255 / 0%)
  );
  --box-shadow: 0 1px 2px 0 rgba(0 0 0 / 25%);
}

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

a {
  color: inherit;
  text-decoration: none;
}

body {
  background-image: linear-gradient(to bottom, white, var(--lighter-red));
  color: var(--dark-red);
  font-family: Poppins, sans-serif;
}

button {
  background-color: transparent;
  border: none;
  color: inherit;
  cursor: pointer;
  font-family: inherit;
  font-size: inherit;
}

button:disabled {
  cursor: initial;
  opacity: 0.6;
}

button.absolute {
  font-size: 2rem;
  left: 20px;
  position: absolute;
  top: 20px;
}

button.classic {
  border: 1px solid var(--dark-red);
  font-size: 0.9rem;
  font-weight: 700;
  height: 30px;
  letter-spacing: 0.05rem;
  padding: 0 10px;
}

button.classic.dark {
  background-color: var(--dark-red);
  background-image: var(--white-gradient);
  color: white;
}

button.classic.yellow {
  background-color: var(--yellow);
  background-image: var(--white-gradient);
  border-color: var(--yellow);
  color: white;
}

button.control {
  align-items: center;
  background: var(--lightest-red);
  border-radius: 50%;
  box-shadow: 0 2px 1px rgba(0 0 0 / 50%);
  display: flex;
  height: 30px;
  justify-content: center;
  width: 30px;
}

button.control:active {
  box-shadow: 0 2px 2px rgba(0 0 0 / 50%) inset;
}

button.gradient {
  background-image: var(--color-gradient);
  border-radius: 4px;
  box-shadow: 0 -4px 0 rgba(60 0 0 / 50%) inset;
  color: white;
  font-size: 1.25rem;
  height: 50px;
  margin-top: 20px;
  width: 300px;
}

button.gradient:active {
  box-shadow: 0 4px 4px rgba(60 0 0 / 50%) inset;
}

form {
  display: flex;
  flex-direction: column;
}

h1 {
  color: white;
  font-size: 2.5rem;
  text-transform: uppercase;
}

h2 {
  font-size: 1.75rem;
}

h3 {
  font-size: 1.25rem;
}

h4 {
  font-size: 1.1rem;
}

h5 {
  font-size: 0.9rem;
}

input {
  border: none;
  border-radius: 4px;
  box-shadow: 0 0 4px 0 rgba(0 0 0 / 25%) inset;
  color: inherit;
  font-family: inherit;
  font-size: inherit;
  height: 40px;
}

input::-webkit-inner-spin-button,
input::-webkit-outer-spin-button {
  -webkit-appearance: none;
}

input[type='number'] {
  -moz-appearance: textfield;
  text-align: center;
  width: 40px;
}

input[type='password'],
input[type='text'] {
  font-size: 0.9rem;
  margin-bottom: 20px;
  padding: 0 10px;
  width: 300px;
}

main {
  align-items: center;
  display: flex;
  flex-direction: column;
  min-height: 100vh;
  padding-bottom: 80px;
}

main > h2,
section > h3 {
  border-bottom: 2px solid var(--lightest-red);
  padding-bottom: 5px;
}

main > h2 {
  margin: 40px 0;
  width: 640px;
}

main > h4 {
  margin-bottom: 40px;
}

main > ul {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-evenly;
  list-style: none;
  padding: 40px 320px 100px;
  width: 100%;
}

p {
  margin-bottom: 20px;
  text-align: center;
}

section {
  background-color: white;
  box-shadow: var(--box-shadow);
  display: flex;
  flex-direction: column;
  margin-bottom: 40px;
  padding: 40px;
  width: 640px;
}

section > h3 {
  margin-bottom: 40px;
}

section > form {
  align-self: center;
}

.gravatar-img {
  border: 8px solid white;
  border-radius: 50%;
  box-shadow: var(--box-shadow);
  box-sizing: content-box;
  height: 240px;
  margin: 40px 0 20px;
  width: 240px;
}

.loader {
  animation: loader 0.8s linear infinite;
  border: 4px solid;
  border-color: white transparent;
  border-radius: 50%;
  height: 25px;
  margin: 0 auto;
  width: 25px;
}

@keyframes loader {
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
}
